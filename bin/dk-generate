#!/usr/bin/env python2

import sys, optparse, os.path

import deploymentkit
import deploymentkit.core
from deploymentkit.core.generator import Generator

from deploymentkit.core import recipe, target

def help_targets_string():
    supported = Generator.supported_targets()
    supported_str = "\n".join([str(i) for i in supported])
    return "%s\n\nSupported generator targets:\n%s" % (target.TargetSpecifier.__doc__, supported_str)

def help_input_string():
    return recipe.GenericRecipeFormat.__doc__

if __name__ == '__main__':

    parser = optparse.OptionParser(usage="Usage: %prog [options] FILE.yaml")
    parser.add_option("-t", "--targets", dest="targets", default="",
                      help="The targets to generate build recipes for. See --help-targets for details", metavar="TARGETS")
    parser.add_option("-o", "--output-directory", dest="output_dir", default="./",
                      help="Directory to output generated files to", metavar="DIR")

    parser.add_option("", "--help-input", action="store_true",
                      help="Show help about input file format")
    parser.add_option("", "--help-targets", action="store_true",
                      help="Show help about the supported targets")

    (options, args) = parser.parse_args()

    if options.help_input or options.help_targets:

        parser.print_usage()

        if options.help_input:
            print help_input_string()

        if options.help_targets:
            print help_targets_string()

        sys.exit()

    else:
        if len(args) < 1:
            parser.error("No input file specified")
        elif len(args) > 1:
            parser.error("Too many arguments")

        input_file = args[0]

        generic_recipe = recipe.GenericRecipe()
        res = generic_recipe.load_from_file(input_file)

        if res.has_warnings:
            print res.warning_description()

        if not res.passed:
            print res.error_description()
            sys.exit(1)

        if options.targets:
            targets = target.TargetSpecifier(options.targets).get_targets()
        else:
            targets = [target.get_default()]

        generator = Generator()
        build_recipes = generator.generate_build_recipes(generic_recipe, targets)
        
        package_name = os.path.basename(input_file).split('.')[0]
        
        recipe.write_build_recipes_to_directory(package_name, build_recipes, options.output_dir)

        sys.exit()
